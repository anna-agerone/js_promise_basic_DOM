{"mappings":"ACGA,SAAS,EAAc,CAAI,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACrB,EAAa,SAAS,aAAa,CAAC,MAE1C,CAAA,EAAW,SAAS,CAAG,UAEnB,GACF,EAAW,SAAS,CAAC,GAAG,CAAC,iBAE3B,EAAW,WAAW,CAAG,EACzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,WACxD,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,MACT,EAAG,IACL,GAGA,EAAS,IAAI,CAAC,WACZ,EAAc,wBAChB,GAGA,EAAS,KAAK,CAAC,WACb,EAAc,wBAAyB,CAAA,EACzC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Function to append messages to the body\nfunction appendMessage(text) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var messageDiv = document.createElement(\"div\");\n    messageDiv.className = \"message\";\n    if (isError) messageDiv.classList.add(\"error-message\");\n    messageDiv.textContent = text;\n    document.body.appendChild(messageDiv);\n}\nvar promise1 = new Promise(function(resolve) {\n    document.querySelector(\".logo\").addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(Error);\n    }, 3000);\n});\n// Success handler for promise1\npromise1.then(function() {\n    appendMessage(\"Promise was resolved!\");\n});\n// Error handler for promise2\npromise2.catch(function() {\n    appendMessage(\"Promise was rejected!\", true);\n});\n\n//# sourceMappingURL=index.31646dd4.js.map\n","'use strict';\n\n// Function to append messages to the body\nfunction appendMessage(text, isError = false) {\n  const messageDiv = document.createElement('div');\n\n  messageDiv.className = 'message';\n\n  if (isError) {\n    messageDiv.classList.add('error-message');\n  }\n  messageDiv.textContent = text;\n  document.body.appendChild(messageDiv);\n}\n\nconst promise1 = new Promise((resolve) => {\n  document.querySelector('.logo').addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(Error);\n  }, 3000);\n});\n\n// Success handler for promise1\npromise1.then(() => {\n  appendMessage('Promise was resolved!');\n});\n\n// Error handler for promise2\npromise2.catch(() => {\n  appendMessage('Promise was rejected!', true);\n});\n"],"names":["appendMessage","text","isError","arguments","length","messageDiv","document","createElement","className","classList","add","textContent","body","appendChild","promise1","Promise","resolve","querySelector","addEventListener","promise2","reject","setTimeout","Error","then","catch"],"version":3,"file":"index.31646dd4.js.map"}